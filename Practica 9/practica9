 sei para habilitar interrupciones

<AVR/interrupt.h> // 

USR_UART cuando no hay datos tenemos que desabilitarla

Modulo binario solo con potencia de 2 

#define MOD(idx) ((idx)&(Buffer_size-1))// asegurando primero el macro con ()




void main(void)
{

	ring_buffer_t mybfTx;
	mybfTx.in_idx=5;
	mybfTx.out_idx=5;
...
	mybfTx.buffer[mybfTx.in_idx++] ="H";
	mybfTx.buffer[mybfTx.in_idx++] ="o";
	mybfTx.buffer[mybfTx.in_idx++] ="l";
	mybfTx.buffer[mybfTx.in_idx++] ="a"; // asta aqui queda
	mybfTx.buffer=  MOD(mybfTx.in_idx+1); // realizando modulo binario
    mybfTx.buffer[mybfTx.in_idx++] ="!"; // Este se queda afuera

}







UART_INI(com,baudrate,size,parity,stop) stop es como guste.\
{
	


}





























-------------------------Transmicion----------------
ISR(UART0_UDRE_vect)
{
	
	UDR0 =mybfTx.buffer[mybfTx.out_idx];
}
ISR(n_vector){
	//codigo aqui
}

putchar() abilita la interrupcion 
si buffer esta vacio matar interrupcion.





/////////////////////////////


===================================Recepcion==============================









